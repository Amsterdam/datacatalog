openapi: 3.0.0
servers:
  - url: 'http://localhost:8000/datacatalog-core'
    description: an example data catalog
    variables: {}
  - url: 'https://api.datapunt.amsterdam.nl/dcat/'
    description: Amsterdams data catalog
info:
  title: Datacatalog-Core
  contact:
    name: Datapunt Amsterdam
    url: 'https://data.amsterdam.nl/'
    email: datapunt@amsterdam.nl
  version: 0.0.1
  license:
    name: Mozilla Public License 2.0
    url: 'https://www.mozilla.org/en-US/MPL/2.0/'
  description: First attempt at creating an openapi 3.0 spec for the new data catalog.


paths:


  '/action/package_list':
    get:
      summary: ''
      description: ''
      operationId: someOperationId
      responses:
        '200':
          description: Description
          content:
            'application/ld+json':
              schema:
                $ref: '#/components/schemas/dcat:Distribution'
            'application/json':
              schema:
                $ref: '#/components/schemas/dcat:Distribution'


  '/action/package_search':
    get:
      summary: ''
      description: ''
      operationId: someOperationId
      responses:
        '200':
          description: Description
          content:
            'application/ld+json':
              schema:
                $ref: '#/components/schemas/dcat:Distribution'
            'application/json':
              schema:
                $ref: '#/components/schemas/dcat:Distribution'


  '/action/package_show':
    get:
      summary: ''
      description: ''
      operationId: someOperationId
      responses:
        '200':
          description: Description
          content:
            'application/ld+json':
              schema:
                $ref: '#/components/schemas/dcat:Distribution'
            'application/json':
              schema:
                $ref: '#/components/schemas/dcat:Distribution'


components:

  x-namespaces:
    dcat: 'http://www.w3.org/ns/dcat#'
    dct: 'http://purl.org/dc/terms/'
    dctype: 'http://purl.org/dc/dcmitype/'
    foaf: 'http://xmlns.com/foaf/0.1/'
    rdf: 'http://www.w3.org/1999/02/22-rdf-syntax-ns#'
    rdfs: 'http://www.w3.org/2000/01/rdf-schema#'
    skos: 'http://www.w3.org/2004/02/skos/core#'
    vcard: 'http://www.w3.org/2006/vcard/ns#'
    xsd: 'http://www.w3.org/2001/XMLSchema#'

  schemas:

    'dct:LinguisticSystem':
      type: string
      pattern: '^[a-zA-Z]{2,3}$'

    'dcat:Dataset':
      type: object
      properties:

        'dct:title':
          description: >-
            A name given to the dataset.
          type: string

        'dct:description':
          description: >-
            free-text account of the dataset.
          type: string

        'dct:issued':
          description: >-
            rdfs:Literal encoded using the relevant `ISO 8601 Date and Time compliant string
            <http://www.w3.org/TR/NOTE-datetime>`_ and typed using the appropriate `XML Schema datatype
            <https://www.w3.org/TR/vocab-dcat/#bib-xmlschema-2>`_
          type: string
          format: date-time

        'dct:modified':
          description: >-
            Most recent date on which the dataset was changed, updated or modified.

            rdfs:Literal encoded using the relevant `ISO 8601 Date and Time compliant string
            <http://www.w3.org/TR/NOTE-datetime>`_ and typed using the appropriate `XML Schema datatype
            <https://www.w3.org/TR/vocab-dcat/#bib-xmlschema-2>`_
          type: string
          format: date-time

        'dct:identifier':
          description: >-
            A unique identifier of the dataset.

            The identifier might be used as part of the URI of the dataset, but still having it represented explicitly
            is useful.
          type: string

        'dcat:keyword':
          description: A keyword or tag describing the dataset.
          type: array
          items:
            type: string

        'dcat:contactPoint':
          description: >-
            Link a dataset to relevant contact information which is provided
            using VCard [vcard-rdf].
          $ref: '#/components/schemas/vcard:Kind'

        'dct:language':
          description: >-
            The language of the dataset.

            Range
            =====
            `dct:LinguisticSystem <http://purl.org/dc/terms/LinguisticSystem>`_
            Resources defined by the Library of Congress (<http://id.loc.gov/vocabulary/iso639-1.html>,
            <http://id.loc.gov/vocabulary/iso639-2.html>) should be used.
            If a ISO 639-1 (two-letter) code is defined for language, then its corresponding IRI should be used; if no ISO 639-1 code is defined, then IRI corresponding to the ISO 639-2 (three-letter) code should be used.
          type:
            - string
            - array
          items:
            type: string

        'dct:temporal': {}

        'dct:spatial': {}

        'dct:accrualPeriodicity': {}

        'dcat:landingPage': {}

        'dcat:distribution':
          type: array
          items:
            $ref: '#/components/schemas/dcat:Distribution'

        'dct:publisher':
          description: >-
            The entity responsible for making the catalog online.

            Resources of type `foaf:Agent <http://xmlns.com/foaf/0.1/Agent>`_ are recommended as values for this
            property.
          type:
            - object
            - string


    'vcard:Kind':
      type: object
      x-comment: Way to complex to model here.


    'ams:Dataset':
      allOf:
        - $ref: '#/components/schemas/dcat:Dataset'
      properties:
        'dct:issued':
          type: string
          format: 'date-time'
          title: Publicatiedatum
          description: >-
            Geef de datum waarop deze beschrijving van de gegevensset
            beschikbaar is gesteld.
        'ams:contactPoint':
          $ref: '#/components/schemas/ams:ContactPoint'


    'ams:ContactPoint':
      description:
        Moet in de toekomst vervangen worden door een "echt" vcard:Kind object.
      type: object
      properties:
        contact_name:
          type: string
        contact_email:
          type: string
          format: email
        contact_uri:
          type: string
          format: uri

    'dcat:CatalogRecord':
      type: object
      additionalProperties: false
      properties:
        'dct:title':
          type: string
        'dct:description':
          type: string
        'dct:issued':
          type: string
          format: 'date-time'
          # TODO: datatype uitzoeken.
        'dct:modified':
          type: string
          format: 'date-time'
          # TODO: datatype uitzoeken.
        'foaf:primaryTopic':
          $ref: '#/components/schemas/dcat:Dataset'

    'dcat:Distribution':
      type: object
      additionalProperties: false
      properties:
        'dct:title':
          type: string
        'dct:description':
          type: string
        'dct:issued':
          type: string
          format: 'date-time'
        'dct:modified':
          type: string
          format: 'date-time'
        'dct:license':
          type: string
        'dct:rights':
          type: string
        'dcat:accessURL':
          type: string
          format: uri
        'dcat:downloadURL':
          type: string
          format: uri
        'dcat:mediaType':
          type: string
          format: 'media-type'
        'dct:format':
          type: string
        'dcat:byteSize':
          type: integer
          format: int64


  parameters:
    page:
      name: page
      in: query
      description: >-
        The page number to return. Requires the `items` parameter. The first
        page has number 1.
      required: false
      schema:
        type: string
        pattern: '^[1-9]\\d*$'
    items:
      name: page_items
      in: query
      description: The maximum number of items to return in one response.
      required: false
      schema:
        type: string
        pattern: '^(?:0|[1-9]\\d*)$'
    embed:
      name: embed
      in: query
      description: >-
        Linked resources to embed.  For example: `foo(bar,baz())`.  This would
        embed all resources with link relation `foo`.

        * In these `foo`-resources, all resources of link types `bar` and `baz`
          will be embedded.

        * In the `bar` resource(s), the default embedding will occur.

        * In the `baz` resource(s), no embedding will occur.
      required: false
      schema:
        type: string
        pattern: '^(?:,?[a-z_]\\w*|,?\\)|\\()+$'
    if-match-OPTIONAL:
      name: If-Match
      description: >-
        This request header is required if the client intends to *update* an
        existing `account` resource.  The value *must* be the current `ETag` of
        the account resource, as last seen by the client.  This prevents lost
        updates if multiple clients are concurrently editing the same resource.
      in: header
      required: false
      schema:
        type: string
        pattern: '^(?:W/)?"[^"]+"$'
    if-match-REQUIRED:
      name: If-Match
      description: >-
        This request header is required if the client intends to *update* an
        existing `account` resource.  The value *must* be the current `ETag` of
        the account resource, as last seen by the client.  This prevents lost
        updates if multiple clients are concurrently editing the same resource.
      in: header
      required: true
      schema:
        type: string
        pattern: '^(?:W/)?"[^"]+"$'
    if-none-match-GET:
      name: If-None-Match
      description: >-
        This request header can make the request conditional. You'll get a `304
        Not Modified` if you're cached version is still up-to-date.
      in: header
      required: false
      schema:
        type: string
        pattern: '^(?:W/)?"[^"]+"(?:\\s,\\s(?:W/)?"[^"]+")*$'
    if-none-match-PUT:
      name: If-None-Match
      description: >-
        This request header is required if the client intends to *create* a new
        `account` resource.  This prevents lost updates if multiple clients are
        concurrently creating the same resource.
      in: header
      required: false
      schema:
        type: string
        enum:
          - '*'
  links: {}
  callbacks: {}
externalDocs:
  description: ''
  url: 'https://amsterdam.github.io/datacatalog-core/'
security: []
