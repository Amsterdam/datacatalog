$schema: 'http://json-schema.org/draft-04/schema#'

type: object

properties:
  logging:
    $ref: '#/definitions/logging.dictconfig'
  datacatalog:
    $ref: '#/definitions/datacatalog'
  postgres:
    $ref: '#/definitions/postgres'
  web:
    $ref: '#/definitions/web'
  search:
    $ref: '#/definitions/search'
  datastore:
    $ref: '#/definitions/datastore'

required:
- main
- logging


definitions:

  main:
    type: object

  web:
    additionalProperties: false
    properties:
      port: {type: integer}
    required: [port]
    type: object

  datastore:
    additionalProperties: false
    properties:
      implementation: {type: string}
      config: {type: object}
    required: [implementation, config]
    type: object

  search:
    additionalProperties: false
    properties:
      implementation: {type: string}
      config: {type: object}
    required: [implementation, config]
    type: object

  logging.dictconfig:
    additionalProperties: false
    properties:
      disable_existing_loggers:
        type: boolean
      filters:
        patternProperties:
          ^[a-zA-Z0-9._-]+$:
            additionalProperties: false
            properties:
              name:
                type: string
            type: object
        type: object
      formatters:
        patternProperties:
          ^[a-zA-Z0-9._-]+$:
            additionalProperties: false
            properties:
              datefmt:
                type: string
              format:
                type: string
            type: object
        type: object
      handlers:
        patternProperties:
          ^[a-zA-Z0-9._-]+$:
            properties:
              class:
                type: string
              filters:
                items:
                  type: string
                type: array
                uniqueItems: true
              formatter:
                type: string
              level:
                type: string
            required:
            - class
            type: object
        type: object
      incremental:
        type: boolean
      loggers:
        patternProperties:
          ^[a-zA-Z0-9._-]+$:
            properties:
              filters:
                items:
                  type: string
                type: array
                uniqueItems: true
              handlers:
                items:
                  type: string
                type: array
                uniqueItems: true
              level:
                type: string
              propagate:
                type: boolean
            type: object
        type: object
      root:
        properties:
          filters:
            items:
              type: string
            type: array
            uniqueItems: true
          handlers:
            items:
              type: string
            type: array
            uniqueItems: true
          level:
            enum:
            - CRITICAL
            - ERROR
            - WARNING
            - INFO
            - DEBUG
            type: string
        type: object
      version:
        enum:
        - 1
        type: integer
    required:
    - version
    type: object

  postgres:
    additionalProperties: false
    properties:
      dbname:
        type: string
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      user:
        type: string
    required:
    - host
    - port
    - user
    - password
    - dbname
    type: object

